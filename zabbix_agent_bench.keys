# zabbix_agent_bench keyfile for libzbxpgsql
# see: https://github.com/cavaliercoder/zabbix_agent_bench
#
# run a simple pass/fail test with:
#   zabbix_agent_bench -keys zabbix_agent_bench.keys -limit=1 -threads=1 -errorcount

pg.connect
pg.setting.discovery
    pg.setting[,,{#SETTING}]

pg.query.string[,,SELECT 'Lorem ipsem dolor';]
pg.query.integer[,,SELECT 1234;]
pg.query.double[,,SELECT 1234.0;]
pg.query.discovery[,,SELECT * FROM pg_database]

pg.backends.count
pg.backends.count[,,zabbix]
pg.backends.count[,,,postgres]
pg.backends.count[,,,,psql]
pg.backends.count[,,,,,127.0.0.1]
pg.backends.count[,,,,,,true]
pg.backends.count[,,,,,,,idle]
pg.backends.count[,,,,,,,,select 1;]
pg.backends.count[,,zabbix,zabbix,psql,127.0.0.1,false,idle]

pg.queries.longest

pg.checkpoints_timed
pg.checkpoints_req
pg.checkpoint_write_time
pg.checkpoint_sync_time
pg.buffers_checkpoint
pg.buffers_clean
pg.maxwritten_clean
pg.buffers_backend
pg.buffers_backend_fsync
pg.buffers_alloc
pg.stats_reset

pg.db.discovery[,zabbix]
	pg.db.size[,zabbix,{#DATABASE}]
    pg.db.numbackends[,zabbix,{#DATABASE}]
    pg.db.xact_commit[,zabbix,{#DATABASE}]
    pg.db.xact_rollback[,zabbix,{#DATABASE}]
    pg.db.blks_read[,zabbix,{#DATABASE}]
    pg.db.blks_hit[,zabbix,{#DATABASE}]
    pg.db.tup_returned[,zabbix,{#DATABASE}]
    pg.db.tup_fetched[,zabbix,{#DATABASE}]
    pg.db.tup_inserted[,zabbix,{#DATABASE}]
    pg.db.tup_updated[,zabbix,{#DATABASE}]
    pg.db.tup_deleted[,zabbix,{#DATABASE}]
    pg.db.conflicts[,zabbix,{#DATABASE}]
    pg.db.temp_files[,zabbix,{#DATABASE}]
    pg.db.temp_bytes[,zabbix,{#DATABASE}]
    pg.db.deadlocks[,zabbix,{#DATABASE}]
    pg.db.blk_read_time[,zabbix,{#DATABASE}]
    pg.db.blk_write_time[,zabbix,{#DATABASE}]
    pg.db.stats_reset[,zabbix,{#DATABASE}]

pg.table.discovery[,zabbix]
    pg.table.children[,{#DATABASE},{#TABLE}]
    pg.table.children.size[,{#DATABASE},{#TABLE}]
    pg.table.children.tuples[,{#DATABASE},{#TABLE}]
    
    pg.table.seq_scan[,{#DATABASE},{#TABLE}]
    pg.table.seq_tup_read[,{#DATABASE},{#TABLE}]
    pg.table.idx_scan[,{#DATABASE},{#TABLE}]
    pg.table.idx_tup_fetch[,{#DATABASE},{#TABLE}]
    pg.table.n_tup_ins[,{#DATABASE},{#TABLE}]
    pg.table.n_tup_upd[,{#DATABASE},{#TABLE}]
    pg.table.n_tup_del[,{#DATABASE},{#TABLE}]
    pg.table.n_tup_hot_upd[,{#DATABASE},{#TABLE}]
    pg.table.n_live_tup[,{#DATABASE},{#TABLE}]
    pg.table.n_dead_tup[,{#DATABASE},{#TABLE}]
    pg.table.last_vacuum[,{#DATABASE},{#TABLE}]
    pg.table.last_autovacuum[,{#DATABASE},{#TABLE}]
    pg.table.last_analyze[,{#DATABASE},{#TABLE}]
    pg.table.last_autoanalyze[,{#DATABASE},{#TABLE}]
    pg.table.vacuum_count[,{#DATABASE},{#TABLE}]
    pg.table.autovacuum_count[,{#DATABASE},{#TABLE}]
    pg.table.analyze_count[,{#DATABASE},{#TABLE}]
    pg.table.autoanalyze_count[,{#DATABASE},{#TABLE}]
    
    pg.table.heap_blks_read[,{#DATABASE},{#TABLE}]
    pg.table.heap_blks_hit[,{#DATABASE},{#TABLE}]
    pg.table.idx_blks_read[,{#DATABASE},{#TABLE}]
    pg.table.idx_blks_hit[,{#DATABASE},{#TABLE}]
    pg.table.toast_blks_read[,{#DATABASE},{#TABLE}]
    pg.table.toast_blks_hit[,{#DATABASE},{#TABLE}]
    pg.table.tidx_blks_read[,{#DATABASE},{#TABLE}]
    pg.table.tidx_blks_hit[,{#DATABASE},{#TABLE}]

# sum totals for tables
pg.table.size[,zabbix]
pg.table.seq_scan[,zabbix]
pg.table.seq_tup_read[,zabbix]
pg.table.idx_scan[,zabbix]
pg.table.idx_tup_fetch[,zabbix]
pg.table.n_tup_ins[,zabbix]
pg.table.n_tup_upd[,zabbix]
pg.table.n_tup_del[,zabbix]
pg.table.n_tup_hot_upd[,zabbix]
pg.table.n_live_tup[,zabbix]
pg.table.n_dead_tup[,zabbix]
pg.table.vacuum_count[,zabbix]
pg.table.autovacuum_count[,zabbix]
pg.table.analyze_count[,zabbix]
pg.table.autoanalyze_count[,zabbix]
pg.table.heap_blks_read[,zabbix]
pg.table.heap_blks_hit[,zabbix]
pg.table.idx_blks_read[,zabbix]
pg.table.idx_blks_hit[,zabbix]
pg.table.toast_blks_read[,zabbix]
pg.table.toast_blks_hit[,zabbix]
pg.table.tidx_blks_read[,zabbix]
pg.table.tidx_blks_hit[,zabbix]

pg.version
pg.modver
